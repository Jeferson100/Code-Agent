from typing import Literal

from pydantic import BaseModel, Field


class SupervisorResponse(BaseModel):
    valid: Literal[True, False] = Field(
        description="Valid from the supervisor, if not is need more interactions return True, else return False"
    )
    feedback: str = Field(description="Feedback from the supervisor")


class CodeOutput(BaseModel):
    """Schema for code solutions to questions about LCEL."""

    prefix: str = Field(description="Description of the problem and approach")
    imports: str = Field(
        description="Code block import statements, if there are imports, leave it empty"
    )
    code: str = Field(description="Code block not including import statements")


class SearchResponse(BaseModel):
    """Response of agent that search in the internet"""

    feedback: str = Field(
        description="Fedeback of agent that search the internet for agent of code"
    )
    code: str = Field(description="Code generated by the search")
